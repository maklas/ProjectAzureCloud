package ru.maklas.azure;

import com.badlogic.gdx.utils.Array;
import org.apache.commons.io.FileUtils;
import org.apache.commons.lang3.StringUtils;

import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class CsvUtils {

	public static <T> void writeCsv(File csvFile, Array<T> data, String head) {
		try (FileOutputStream fos = FileUtils.openOutputStream(csvFile)) {
			OutputStreamWriter osw = new OutputStreamWriter(fos, StandardCharsets.UTF_8);
			if (StringUtils.isNotEmpty(head)) {
				osw.write(head);
				osw.write("\r\n");
			}
			for (int i = 0; i < data.size - 1; i++) {
				osw.write(data.get(i).toString());
				osw.write("\r\n");
			}
			osw.write(data.get(data.size - 1).toString());
			osw.flush();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static String toCsv(Object... fields) {
		if (fields.length == 0) return "";
		StringBuilder sb = new StringBuilder();
		for (Object field : fields) {
			sb.append(fieldToString(field));
			sb.append(",");
		}
		sb.setLength(sb.length() - 1);

		return sb.toString();
	}

	public static final DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

	private static String fieldToString(Object field) {
		String s;
		if (field == null) {
			s = "";
		} else if (field instanceof LocalDate) {
			s = ((LocalDate) field).format(dateFormatter);
		} else if (field instanceof Gender) {
			s = field == Gender.MALE ? "M" : (field == Gender.FEMALE ? "F" : "");
		} else {
			s = field.toString();
		}
		return csvEscape(s);
	}


	private static String csvEscape(String s){
		if (s.length() == 0) return s;
		if (s.charAt(0) != '\"' && s.charAt(s.length() - 1) != '\"' && StringUtils.contains(s, ',')) {
			return '\"' + s + '\"';
		}
		return s;
	}


	public static String randomJobName() {
		return Utils.random(jobNames);
	}

	private static String[] jobNames = {"computer specialist",
			"computer programmer",
			"computer operator",
			"software specialist",
			"systems analyst",
			"systems administrator",
			"web developer",
			"web programmer",
			"webmaster",
			"web designer",
			"office worker",
			"office employee",
			"office clerk",
			"filing clerk",
			"receptionist",
			"secretary",
			"assistant",
			"typist",
			"stenographer",
			"banker",
			"bank officer",
			"economist",
			"auditor",
			"accountant",
			"bookkeeper",
			"teller",
			"cashier",
			"bank clerk",
			"financier",
			"treasurer",
			"investor",
			"sponsor",
			"stockbroker",
			"pawnbroker",
			"tax collector",
			"sales representative",
			"sales manager",
			"salesperson",
			"salesman",
			"saleswoman",
			"salesgirl",
			"salesclerk",
			"cashier",
			"seller",
			"buyer",
			"wholesale buyer",
			"wholesaler",
			"retailer",
			"merchant",
			"distributor",
			"dealer",
			"trader",
			"advertising agent",
			"grocer",
			"greengrocer",
			"baker",
			"butcher",
			"florist",
			"doctor",
			"physician",
			"family doctor",
			"general practitioner",
			"eye specialist",
			"ear specialist",
			"throat specialist",
			"heart specialist",
			"cardiologist",
			"surgeon",
			"pediatrician",
			"psychiatrist",
			"psychoanalyst",
			"dentist",
			"dietitian",
			"pharmacist",
			"veterinarian",
			"nurse",
			"paramedic",
			"nurse's aide",
			"principal",
			"dean",
			"professor",
			"teacher",
			"instructor",
			"schoolteacher",
			"college teacher",
			"university teacher",
			"head teacher",
			"senior teacher",
			"tutor",
			"mentor",
			"counselor",
			"teacher of mathematics",
			"mathematics teacher",
			"math teacher (BrE: maths teacher)",
			"English teacher",
			"teacher of English",
			"history teacher",
			"music teacher"};

	private static String[] maleNames = {
			"Захар",
			"Ян",
			"Марат",
			"Харитон",
			"Роберт",
			"Йосып",
			"Ждан",
			"Пётр",
			"Иосиф",
			"Юлий",
			"Григорий",
			"Йомер",
			"Орландо",
			"Георгий",
			"Артемий",
			"Чарльз",
			"Шерлок",
			"Остап",
			"Шамиль",
			"Нестор",
			"Роберт",
			"Савва",
			"Леопольд",
			"Савва",
			"Донат",
			"Руслан",
			"Лукьян",
			"Даниил",
			"Юлий",
			"Денис",
			"Бронислав",
			"Оскар",
			"Жерар",
			"Сергей",
			"Шамиль",
			"Цицерон",
			"Ярослав",
			"Тарас",
			"Прохор",
			"Руслан",
			"Камиль",
			"Эдуард",
			"Тит",
			"Юлий",
			"Эрик",
			"Цезарь",
			"Йозеф",
			"Родион",
			"Алексей",
			"Сергей",
			"Цезарь",
			"Оливер",
			"Елисей",
			"Устин",
			"Устин",
			"Анатолий",
			"Цицерон",
			"Ждан",
			"Фёдор",
			"Юлий",
			"Константин",
			"Валериан",
			"Максим",
			"Лоренс",
			"Яков",
			"Жигер",
			"Яков",
			"Болеслав",
			"Борис",
			"Харитон",
			"Болеслав",
			"Яромир",
			"Евгений",
			"Артур",
			"Иван",
			"Йоган",
			"Денис",
			"Ярослав",
			"Фёдор",
			"Зенон",
			"Эдуард",
			"Олег",
			"Матвей",
			"Роман",
			"Леон",
			"Георгий",
			"Устин",
			"Прохор",
			"Гарри",
			"Юлий",
			"Ждан",
			"Рафаил",
			"Эдуард",
			"Зуфар",
			"Тит",
			"Семён",
			"Харитон",
			"Спартак",
			"Зенон",
	};

	private static String[] maleLastNames = {
			"Марочко",
			"Гришин",
			"Терентьев",
			"Пархоменко",
			"Жуков",
			"Чикольба",
			"Рожков",
			"Кобзар",
			"Повалий",
			"Мазайло",
			"Пилипейко",
			"Селиверстов",
			"Шубин",
			"Третьяков",
			"Карпенко-Карый",
			"Палий",
			"Игнатьев",
			"Трясило",
			"Агафонов",
			"Фокин",
			"Савенко",
			"Евдокимов",
			"Тимошенко",
			"Кулагин",
			"Котовский",
			"Правый",
			"Панфилов",
			"Кравченко",
			"Исаков",
			"Лебедев",
			"Мухин",
			"Терещенко",
			"Шубин",
			"Зиновьев",
			"Лихачёв",
			"Филатов",
			"Захаров",
			"Мишин",
			"Гуляев",
			"Трясило",
			"Белов",
			"Денисов",
			"Комиссаров",
			"Шамрыло",
			"Осипов",
			"Казаков",
			"Сирко",
			"Шевченко",
			"Хохлов",
			"Темченко",
			"Беляков",
			"Лобанов",
			"Константинов",
			"Орехов",
			"Сысоев",
			"Денисов",
			"Гришин",
			"Терентьев",
			"Мазайло",
			"Лапин",
			"Зварыч",
			"Савельев",
			"Лыткин",
			"Корнилов",
			"Кононов",
			"Шумейко",
			"Калинин",
			"Негода",
			"Калинин",
			"Пономаренко",
			"Сирко",
			"Барановский",
			"Иваненко",
			"Артемьев",
			"Сидоров",
			"Муравьёв",
			"Кузьмин",
			"Назаров",
			"Захарченко",
			"Яковенко",
			"Петрив",
			"Палий",
			"Легойда",
			"Журавлёв",
			"Борисов",
			"Петров",
			"Шилов",
			"Шарапов",
			"Павлив",
			"Одинцов",
			"Медяник",
			"Гончар",
			"Нестеров",
			"Передрий",
			"Воронов",
			"Миронов",
			"Несвитайло",
			"Василенко",
			"Сафонов",
	};

	private static String[] femaleNames = {
		"Таисия",
		"Эдда",
		"София",
		"Жаклин",
		"Таисия",
		"Мария",
		"Екатерина",
		"Яна",
		"Оксана",
		"Зинаида",
		"Устинья",
		"Глафира",
		"София",
		"Прасковья",
		"Владлена",
		"Евгения",
		"Клавдия",
		"Берта",
		"Евгения",
		"Нонна",
		"Мальвина",
		"Алина",
		"Злата",
		"Юзефа",
		"Христина",
		"Гюзель",
		"Жозефина",
		"Глафира",
		"Яся",
		"Гелена",
		"Шушана",
		"Розалина",
		"Харита",
		"Чилита",
		"Юнона",
		"Жозефина",
		"Генриетта",
		"Жасмин",
		"Розалина",
		"Ярослава",
		"Юна",
		"Люся",
		"Яна",
		"Богдана",
		"Юзефа",
		"Октябрина",
		"Татьяна",
		"Валерия",
		"Людмила",
		"Алла",
		"Полина",
		"Ева",
		"Прасковья",
		"Ева",
		"Василиса",
		"Варвара",
		"Инга",
		"Глория",
		"Таисия",
		"Юнона",
		"Биргит",
		"Харитина",
		"Чара",
		"Елизавета",
		"Софья",
		"Тамара",
		"Октябрина",
		"Розалина",
		"Яэль",
		"Юлия",
		"Фаина",
		"Элеонора",
		"Лилия",
		"Устинья",
		"Юнона",
		"Октябрина",
		"Лариса",
		"Шушана",
		"Инна",
		"Ольга",
		"Вера",
		"Екатерина",
		"Октябрина",
		"Жанна",
		"Майя",
		"Устинья",
		"Эллада",
		"Янита",
		"Светлана",
		"Шарлота",
		"Харитина",
		"Ульяна",
		"Таисия",
		"Марта",
		"Юнона",
		"Устинья",
		"Варвара",
		"Валентина",
		"Прасковья"
	};

	private static String[] femaleLastNames = {
			"Пархоменко",
			"Зиновьева",
			"Устинова",
			"Орехова",
			"Лаврентьева",
			"Абрамова",
			"Красильникова",
			"Терентьева",
			"Овчинникова",
			"Харитонова",
			"Пилипейко",
			"Ильина",
			"Дидовец",
			"Петухова",
			"Кулишенко",
			"Суханова",
			"Князева",
			"Ермакова",
			"Гуляева",
			"Зварыч",
			"Милославска",
			"Зиновьева",
			"Милославска",
			"Боброва",
			"Фролова",
			"Зуева",
			"Блинова",
			"Андреева",
			"Русакова",
			"Кулагина",
			"Воронцова",
			"Комиссарова",
			"Сидорова",
			"Меркушева",
			"Шевченко",
			"Кравченко",
			"Павлова",
			"Наумова",
			"Бачей",
			"Федосеева",
			"Фокина",
			"Ширяева",
			"Попова",
			"Селиверстова",
			"Никифорова",
			"Сафонова",
			"Мамонтова",
			"Гуляева",
			"Хижняк",
			"Савина",
			"Яковенко",
			"Яковенко",
			"Жданова",
			"Полищук",
			"Дубченко",
			"Зимина",
			"Рыбакова",
			"Самсонова",
			"Корнейчук",
			"Мельникова",
			"Михайлова",
			"Гущина",
			"Тимофеева",
			"Корнилова",
			"Филиппова",
			"Григорьева",
			"Юдина",
			"Шарапова",
			"Гришина",
			"Селиверстова",
			"Лобанова",
			"Гуляева",
			"Беспалова",
			"Лукашенко",
			"Полякова",
			"Белоусова",
			"Гусева",
			"Мухина",
			"Забужко",
			"Дроздова",
			"Григорьева",
			"Петрив",
			"Миронова",
			"Вальковска",
			"Хитрук",
			"Крылова",
			"Шумило",
			"Тетерина",
			"Шамрыло",
			"Пасичник",
			"Прохорова",
			"Марочко",
			"Филиппова",
			"Повалий",
			"Харитонова",
			"Ефимова",
			"Сысоева",
			"Коровяк",
			"Воробьёва",
	};

	public static String randomName(Gender gender) {
		if (gender == Gender.UNKNOWN) throw new RuntimeException();
		return Utils.random(gender == Gender.MALE ? maleNames : femaleNames);
	}

	public static String randomLastName(Gender gender) {
		if (gender == Gender.UNKNOWN) throw new RuntimeException();
		return Utils.random(gender == Gender.MALE ? maleLastNames : femaleLastNames);
	}
}
